// -----------------------------------------
// 仕様書
// 将来的に変わる可能性大、まあ仮仕様です
// -----------------------------------------
// 基本内容
・「a: b,」という書式が基本です。
・この場合「aの値はb」となります。
・最後の「,」は必須です(厳密には最後の項目の場合いらないですがついてても動くので全部に付けたほうが楽です)
・入れ子構造をとることができます。その場合{}を使います。
・つまり「a: {x: 1, y: 2,}, b: 3」の場合「a-x=1, a-y=2, b=3」です。

// -----------------------------------------
// 精霊データ
name: 精霊の名前(""で囲う)
cardno: 精霊の図鑑番号
hp: LvMAXの時のHP
atk: LvMAXの時の攻撃力
mana: マナプラスの値(0でOK)
cost: コストの値(使う時が来るかはわからない)
islegend: レジェンド精霊なら「true」、そうでないなら「false」
attr: 精霊の持つ属性。[]で囲い2つの数字を指定する。
	(例:) [1,2](水/雷属性), [0,-1](火属性)
	(0: 火, 1: 水, 2: 雷, 3: 光, 4: 闇, -1: 属性なし)
species: 精霊の持つ種族。将来的に複数種族が実装されるかもしれないので配列で実装します。
	(例:) [1](神族)、[9](術士)
	(0: 龍族, 1: 神族, 2: 魔族, 3: 天使, 4: 妖精, 5: 亜人, 6: 物質, 7: 魔法生物, 8: 戦士, 9: 術士, 10: アイテム, 11: AbCd)
awakes: 潜在能力の一覧。[]の中に{…}の要素を置くことで実装します。詳細は下部で。
	(例:) [{...},{...},],(潜在能力を2つ持つ)
Lawake: レジェンド時の潜在能力一覧。awakesと同様。
as1: アンサースキル1の内容。
	desc: アンサースキル1の説明文。
	func: アンサースキル1の実装内容。とりあえず function(){}, だけ書いてくれればOKです。
ss1: スペシャルスキル1の内容。
	desc: スペシャルスキル1の説明文。
	turn: 貯まるのにかかるターン数(ファストは含めない)
	func: スペシャルスキル1の実装内容。とりあえず function(){}, だけ書いてくれればOKです。
as2: アンサースキル2の内容。AS1と同じ。
ss2: スペシャルスキル2の内容。SS1と同じ。
// -----------------------------------------
// 具体例(ex: 神秘譚2 ミコト)
{
	name: "牡丹微睡む夕月夜 ミコト・ウタヨミ",
	cardno: 6801,
	hp: 2241,
	atk: 3834,
	mana: 0,
	cost: 46,
	islegend: true,
	attr: [2, 1],
	species: [1],
	awakes: [
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
		{},
	],
	Lawake: [
		{},
		{},
	],
	as1: {
		desc: "5チェインで敵単体を3回連続攻撃(効果値: 350)",
		func: function () {},
	},
	ss1: {
		desc: "敵全体へ雷属性のダメージ(効果値: 200)、さらに水属性の敵には特攻ダメージ(効果値: 300)",
		turn: 6,
		func: function () {},
	},
	as2: {
		desc: "5チェインで敵単体を3回連続攻撃(効果値: 450)",
		func: function () {},
	},
	ss2: {
		desc: "敵全体へ雷属性のダメージ(効果値: 200)、さらに水属性の敵には特攻ダメージ(効果値: 700)",
		turn: 9,
		func: function () {},
	},
},
// -----------------------------------------

